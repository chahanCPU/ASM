macro_rules! BITMASK(
    ($n:expr) => (
        ((1 << $n) - 1)
    );
);
macro_rules! BITSEL(
    ($n:expr) => (
        (1 << ($n)) 
    );
);
fn bit_true32(x:u32,d:usize) -> bool{
    return (x&BITSEL!(d))>0
}
fn bit_true64(x:u64,d:usize) -> bool{
    return (x&BITSEL!(d))>0
}

pub fn sqrt_fpu(f: f32) -> f32{
//return f.sqrt();
let x = f.to_bits();
//module fsqrt(
//  input wire [31:0] x,
//  output wire [31:0] y);

  //wire s;
  //wire [7:0] e;
  //wire [22:0] m;

  //assign {s,e,m} = x;
  let s = x>>31;
  let e = (x>>23) & BITMASK!(8);
  let m = x & BITMASK!(23);
  
  //wire [24:0] ma;
  let ma =  if e>0 && (e & BITMASK!(1))==0 {(1<<23)+m} else 
  if e>0 && (e & BITMASK!(1))==1 {(1<<24)+(m<<1)} else
  if bit_true32(m,22) {(m<<1)} else
  if bit_true32(m,21) || bit_true32(m,20){(m<< 1) & BITMASK!(25)} else 
  if bit_true32(m,19) || bit_true32(m,18){(m<< 3) & BITMASK!(25)} else 
  if bit_true32(m,17) || bit_true32(m,16){(m<< 5) & BITMASK!(25)} else 
  if bit_true32(m,15) || bit_true32(m,14){(m<< 7) & BITMASK!(25)} else 
  if bit_true32(m,13) || bit_true32(m,12){(m<< 9) & BITMASK!(25)} else 
  if bit_true32(m,11) || bit_true32(m,10){(m<<11) & BITMASK!(25)} else 
  if bit_true32(m, 9) || bit_true32(m, 8){(m<<13) & BITMASK!(25)} else 
  if bit_true32(m, 7) || bit_true32(m, 6){(m<<15) & BITMASK!(25)} else 
  if bit_true32(m, 5) || bit_true32(m, 4){(m<<17) & BITMASK!(25)} else 
  if bit_true32(m, 3) || bit_true32(m, 2){(m<<19) & BITMASK!(25)} else 
                                        {(m<<21) & BITMASK!(25)};
  // println!("ma = {:b}",ma);
  //wire [7:0] ea;
  let ea =  if e>0 {((e>>1) + 64)} else
  if bit_true32(m,22){64} else
  if bit_true32(m,21)|| bit_true32(m,20){63} else
  if bit_true32(m,19)|| bit_true32(m,18){62} else
  if bit_true32(m,17)|| bit_true32(m,16){61} else
  if bit_true32(m,15)|| bit_true32(m,14){60} else
  if bit_true32(m,13)|| bit_true32(m,12){59} else
  if bit_true32(m,11)|| bit_true32(m,10){58} else
  if bit_true32(m, 9)|| bit_true32(m, 8){57} else
  if bit_true32(m, 7)|| bit_true32(m, 6){56} else
  if bit_true32(m, 5)|| bit_true32(m, 4){55} else
  if bit_true32(m, 3)|| bit_true32(m, 2){54} else {53};
            
  //wire [27:0] init;
  let ma2417 = ma >> 17;
  let init =    if  ma2417 == 0b1000000  {0b0101101000101000011111100000} else
                if  ma2417 ==  0b01000001 {0b0101100101110111101000001010} else
                if  ma2417 ==  0b01000010 {0b0101100011001010110001001000} else
                if  ma2417 ==  0b01000011 {0b0101100000100001110000110110} else
                if  ma2417 ==  0b01000100 {0b0101011101111100011110010010} else
                if  ma2417 ==  0b01000101 {0b0101011011011010110000111000} else
                if  ma2417 ==  0b01000110 {0b0101011000111100100000011101} else
                if  ma2417 ==  0b01000111 {0b0101010110100001100101010010} else
                if  ma2417 ==  0b01001000 {0b0101010100001001110111111101} else
                if  ma2417 ==  0b01001001 {0b0101010001110101010001011101} else
                if  ma2417 ==  0b01001010 {0b0101001111100011101011000101} else
                if  ma2417 ==  0b01001011 {0b0101001101010100111110011110} else
                if  ma2417 ==  0b01001100 {0b0101001011001001000101100001} else
                if  ma2417 ==  0b01001101 {0b0101001000111111111010011010} else
                if  ma2417 ==  0b01001110 {0b0101000110111001010111100110} else
                if  ma2417 ==  0b01001111 {0b0101000100110101010111110001} else
                if  ma2417 ==  0b01010000 {0b0101000010110011110101110110} else
                if  ma2417 ==  0b01010001 {0b0101000000110100101100111110} else
                if  ma2417 ==  0b01010010 {0b0100111110110111111000011111} else
                if  ma2417 ==  0b01010011 {0b0100111100111101010011111100} else
                if  ma2417 ==  0b01010100 {0b0100111011000100111011000100} else
                if  ma2417 ==  0b01010101 {0b0100111001001110101001110001} else
                if  ma2417 ==  0b01010110 {0b0100110111011010011100000111} else
                if  ma2417 ==  0b01010111 {0b0100110101101000001110010100} else
                if  ma2417 ==  0b01011000 {0b0100110011110111111100110001} else
                if  ma2417 ==  0b01011001 {0b0100110010001001100011111111} else
                if  ma2417 ==  0b01011010 {0b0100110000011101000000101001} else
                if  ma2417 ==  0b01011011 {0b0100101110110010001111011111} else
                if  ma2417 ==  0b01011100 {0b0100101101001001001101011100} else
                if  ma2417 ==  0b01011101 {0b0100101011100001110111100010} else
                if  ma2417 ==  0b01011110 {0b0100101001111100001010111001} else
                if  ma2417 ==  0b01011111 {0b0100101000011000000100101111} else
                if  ma2417 ==  0b01100000 {0b0100100110110101100010011011} else
                if  ma2417 ==  0b01100001 {0b0100100101010100100001011001} else
                if  ma2417 ==  0b01100010 {0b0100100011110100111111001001} else
                if  ma2417 ==  0b01100011 {0b0100100010010110111001010011} else
                if  ma2417 ==  0b01100100 {0b0100100000111010001101100100} else
                if  ma2417 ==  0b01100101 {0b0100011111011110111001101110} else
                if  ma2417 ==  0b01100110 {0b0100011110000100111011100101} else
                if  ma2417 ==  0b01100111 {0b0100011100101100010001000111} else
                if  ma2417 ==  0b01101000 {0b0100011011010100111000010011} else
                if  ma2417 ==  0b01101001 {0b0100011001111110101111001011} else
                if  ma2417 ==  0b01101010 {0b0100011000101001110011111001} else
                if  ma2417 ==  0b01101011 {0b0100010111010110000100101000} else
                if  ma2417 ==  0b01101100 {0b0100010110000011011111101000} else
                if  ma2417 ==  0b01101101 {0b0100010100110010000011001100} else
                if  ma2417 ==  0b01101110 {0b0100010011100001101101101011} else
                if  ma2417 ==  0b01101111 {0b0100010010010010011101011110} else
                if  ma2417 ==  0b01110000 {0b0100010001000100010001000100} else
                if  ma2417 ==  0b01110001 {0b0100001111110111000110111011} else
                if  ma2417 ==  0b01110010 {0b0100001110101010111101101000} else
                if  ma2417 ==  0b01110011 {0b0100001101011111110011110001} else
                if  ma2417 ==  0b01110100 {0b0100001100010101100111111101} else
                if  ma2417 ==  0b01110101 {0b0100001011001100011000111001} else
                if  ma2417 ==  0b01110110 {0b0100001010000100000101010010} else
                if  ma2417 ==  0b01110111 {0b0100001000111100101011111000} else
                if  ma2417 ==  0b01111000 {0b0100000111110110001011011111} else
                if  ma2417 ==  0b01111001 {0b0100000110110000100010111010} else
                if  ma2417 ==  0b01111010 {0b0100000101101011110001000000} else
                if  ma2417 ==  0b01111011 {0b0100000100100111110100101100} else
                if  ma2417 ==  0b01111100 {0b0100000011100100101100110111} else
                if  ma2417 ==  0b01111101 {0b0100000010100010011000011110} else
                if  ma2417 ==  0b01111110 {0b0100000001100000110110100010} else
                if  ma2417 ==  0b01111111 {0b0100000000100000000110000001} else
                if  ma2417 ==  0b10000000 {0b011111111100000000101111110} else
                if  ma2417 ==  0b10000001 {0b011111110100000110101011110} else
                if  ma2417 ==  0b10000010 {0b011111101100010010011100110} else
                if  ma2417 ==  0b10000011 {0b011111100100100011111011101} else
                if  ma2417 ==  0b10000100 {0b011111011100111011000001011} else
                if  ma2417 ==  0b10000101 {0b011111010101010111100111100} else
                if  ma2417 ==  0b10000110 {0b011111001101111001100111010} else
                if  ma2417 ==  0b10000111 {0b011111000110100000111010010} else
                if  ma2417 ==  0b10001000 {0b011110111111001101011010011} else
                if  ma2417 ==  0b10001001 {0b011110110111111111000001100} else
                if  ma2417 ==  0b10001010 {0b011110110000110101101001101} else
                if  ma2417 ==  0b10001011 {0b011110101001110001001101001} else
                if  ma2417 ==  0b10001100 {0b011110100010110001100110011} else
                if  ma2417 ==  0b10001101 {0b011110011011110110101111110} else
                if  ma2417 ==  0b10001110 {0b011110010101000000100100000} else
                if  ma2417 ==  0b10001111 {0b011110001110001110111101111} else
                if  ma2417 ==  0b10010000 {0b011110000111100001111000011} else
                if  ma2417 ==  0b10010001 {0b011110000000111001001110100} else
                if  ma2417 ==  0b10010010 {0b011101111010010100111011011} else
                if  ma2417 ==  0b10010011 {0b011101110011110100111010001} else
                if  ma2417 ==  0b10010100 {0b011101101101011001000110011} else
                if  ma2417 ==  0b10010101 {0b011101100111000001011011100} else
                if  ma2417 ==  0b10010110 {0b011101100000101101110101001} else
                if  ma2417 ==  0b10010111 {0b011101011010011110001111000} else
                if  ma2417 ==  0b10011000 {0b011101010100010010100100101} else
                if  ma2417 ==  0b10011001 {0b011101001110001010110010010} else
                if  ma2417 ==  0b10011010 {0b011101001000000110110011110} else
                if  ma2417 ==  0b10011011 {0b011101000010000110100101000} else
                if  ma2417 ==  0b10011100 {0b011100111100001010000010100} else
                if  ma2417 ==  0b10011101 {0b011100110110010001001000010} else
                if  ma2417 ==  0b10011110 {0b011100110000011011110010101} else
                if  ma2417 ==  0b10011111 {0b011100101010101001111110000} else
                if  ma2417 ==  0b10100000 {0b011100100100111011100111000} else
                if  ma2417 ==  0b10100001 {0b011100011111010000101010001} else
                if  ma2417 ==  0b10100010 {0b011100011001101001000100000} else
                if  ma2417 ==  0b10100011 {0b011100010100000100110001010} else
                if  ma2417 ==  0b10100100 {0b011100001110100011101110111} else
                if  ma2417 ==  0b10100101 {0b011100001001000101111001100} else
                if  ma2417 ==  0b10100110 {0b011100000011101011001110001} else
                if  ma2417 ==  0b10100111 {0b011011111110010011101001110} else
                if  ma2417 ==  0b10101000 {0b011011111000111111001001100} else
                if  ma2417 ==  0b10101001 {0b011011110011101101101010010} else
                if  ma2417 ==  0b10101010 {0b011011101110011111001001011} else
                if  ma2417 ==  0b10101011 {0b011011101001010011100100000} else
                if  ma2417 ==  0b10101100 {0b011011100100001010110111100} else
                if  ma2417 ==  0b10101101 {0b011011011111000101000001001} else
                if  ma2417 ==  0b10101110 {0b011011011010000001111110010} else
                if  ma2417 ==  0b10101111 {0b011011010101000001101100010} else
                if  ma2417 ==  0b10110000 {0b011011010000000100001000110} else
                if  ma2417 ==  0b10110001 {0b011011001011001001010001010} else
                if  ma2417 ==  0b10110010 {0b011011000110010001000011011} else
                if  ma2417 ==  0b10110011 {0b011011000001011011011100110} else
                if  ma2417 ==  0b10110100 {0b011010111100101000011010111} else
                if  ma2417 ==  0b10110101 {0b011010110111110111111011110} else
                if  ma2417 ==  0b10110110 {0b011010110011001001111100111} else
                if  ma2417 ==  0b10110111 {0b011010101110011110011100010} else
                if  ma2417 ==  0b10111000 {0b011010101001110101010111110} else
                if  ma2417 ==  0b10111001 {0b011010100101001110101101001} else
                if  ma2417 ==  0b10111010 {0b011010100000101010011010100} else
                if  ma2417 ==  0b10111011 {0b011010011100001000011101101} else
                if  ma2417 ==  0b10111100 {0b011010010111101000110100101} else
                if  ma2417 ==  0b10111101 {0b011010010011001011011101100} else
                if  ma2417 ==  0b10111110 {0b011010001110110000010110100} else
                if  ma2417 ==  0b10111111 {0b011010001010010111011101100} else
                if  ma2417 ==  0b11000000 {0b011010000110000000110000110} else
                if  ma2417 ==  0b11000001 {0b011010000001101100001110100} else
                if  ma2417 ==  0b11000010 {0b011001111101011001110100111} else
                if  ma2417 ==  0b11000011 {0b011001111001001001100010010} else
                if  ma2417 ==  0b11000100 {0b011001110100111011010100110} else
                if  ma2417 ==  0b11000101 {0b011001110000101111001010110} else
                if  ma2417 ==  0b11000110 {0b011001101100100101000010101} else
                if  ma2417 ==  0b11000111 {0b011001101000011100111010110} else
                if  ma2417 ==  0b11001000 {0b011001100100010110110001011} else
                if  ma2417 ==  0b11001001 {0b011001100000010010100101010} else
                if  ma2417 ==  0b11001010 {0b011001011100010000010100100} else
                if  ma2417 ==  0b11001011 {0b011001011000001111111101110} else
                if  ma2417 ==  0b11001100 {0b011001010100010001011111100} else
                if  ma2417 ==  0b11001101 {0b011001010000010100111000010} else
                if  ma2417 ==  0b11001110 {0b011001001100011010000110101} else
                if  ma2417 ==  0b11001111 {0b011001001000100001001001001} else
                if  ma2417 ==  0b11010000 {0b011001000100101001111110011} else
                if  ma2417 ==  0b11010001 {0b011001000000110100100101000} else
                if  ma2417 ==  0b11010010 {0b011000111101000000111011110} else
                if  ma2417 ==  0b11010011 {0b011000111001001111000001010} else
                if  ma2417 ==  0b11010100 {0b011000110101011110110100000} else
                if  ma2417 ==  0b11010101 {0b011000110001110000010011000} else
                if  ma2417 ==  0b11010110 {0b011000101110000011011100111} else
                if  ma2417 ==  0b11010111 {0b011000101010011000010000011} else
                if  ma2417 ==  0b11011000 {0b011000100110101110101100011} else
                if  ma2417 ==  0b11011001 {0b011000100011000110101111011} else
                if  ma2417 ==  0b11011010 {0b011000011111100000011000101} else
                if  ma2417 ==  0b11011011 {0b011000011011111011100110101} else
                if  ma2417 ==  0b11011100 {0b011000011000011000011000011} else
                if  ma2417 ==  0b11011101 {0b011000010100110110101100101} else
                if  ma2417 ==  0b11011110 {0b011000010001010110100010100} else
                if  ma2417 ==  0b11011111 {0b011000001101110111111000101} else
                if  ma2417 ==  0b11100000 {0b011000001010011010101110001} else
                if  ma2417 ==  0b11100001 {0b011000000110111111000001111} else
                if  ma2417 ==  0b11100010 {0b011000000011100100110010111} else
                if  ma2417 ==  0b11100011 {0b011000000000001100000000001} else
                if  ma2417 ==  0b11100100 {0b010111111100110100101000100} else
                if  ma2417 ==  0b11100101 {0b010111111001011110101011000} else
                if  ma2417 ==  0b11100110 {0b010111110110001010000110110} else
                if  ma2417 ==  0b11100111 {0b010111110010110110111010110} else
                if  ma2417 ==  0b11101000 {0b010111101111100101000110000} else
                if  ma2417 ==  0b11101001 {0b010111101100010100100111101} else
                if  ma2417 ==  0b11101010 {0b010111101001000101011110110} else
                if  ma2417 ==  0b11101011 {0b010111100101110111101010011} else
                if  ma2417 ==  0b11101100 {0b010111100010101011001001101} else
                if  ma2417 ==  0b11101101 {0b010111011111011111111011101} else
                if  ma2417 ==  0b11101110 {0b010111011100010101111111100} else
                if  ma2417 ==  0b11101111 {0b010111011001001101010100100} else
                if  ma2417 ==  0b11110000 {0b010111010110000101111001101} else
                if  ma2417 ==  0b11110001 {0b010111010010111111101110000} else
                if  ma2417 ==  0b11110010 {0b010111001111111010110001000} else
                if  ma2417 ==  0b11110011 {0b010111001100110111000001110} else
                if  ma2417 ==  0b11110100 {0b010111001001110100011111011} else
                if  ma2417 ==  0b11110101 {0b010111000110110011001001010} else
                if  ma2417 ==  0b11110110 {0b010111000011110010111110011} else
                if  ma2417 ==  0b11110111 {0b010111000000110011111110010} else
                if  ma2417 ==  0b11111000 {0b010110111101110110000111111} else
                if  ma2417 ==  0b11111001 {0b010110111010111001011010101} else
                if  ma2417 ==  0b11111010 {0b010110110111111101110101110} else
                if  ma2417 ==  0b11111011 {0b010110110101000011011000101} else
                if  ma2417 ==  0b11111100 {0b010110110010001010000010100} else
                if  ma2417 ==  0b11111101 {0b010110101111010001110010100} else
                if  ma2417 ==  0b11111110 {0b010110101100011010101000001} else {0b010110101001100100100010101};
// println!("init = {:b}",init);
  
  //wire [50:0] k1;
  let k1:u64 = (ma as u64 * init as u64)&BITMASK!(51);
  // println!("k1 = {:b}",k1);

  //wire [49:0] l1;
  let l1 = (((init>>2)&BITMASK!(25)) * ((init>>2)&BITMASK!(25)))&BITMASK!(50);
  // println!("l1 = {:b}",l1);

  //wire [49:0] m11;
  let m11 =((k1>>26)* (l1>>25)) & BITMASK!(50);
  // println!("m11 = {:b}",m11);

  //wire [29:0] n1;
  let n1 = (init<<1) + init;
  // println!("n1 = {:b}",n1);

  //wire [30:0] p1;
  let p1 = BITMASK!(31)&(0x100000000 + (n1<<1) - (m11>>20));//?
  // println!("p1 = {:b}",p1);

  //wire [26:0] y1;
  let y1 = BITMASK!(27)&if bit_true64(p1, 1) && (bit_true64(p1, 0) || bit_true64(p1, 2)) {((p1>>2)&BITMASK!(27)) + 1} else {((p1>>2)&BITMASK!(27))};
  //??
  //{p1[28:2]} + 28'b1って桁合ってるの？
  // println!("y1 = {:b}",y1);


////////////////////

  //wire [50:0] k2;
  let k2 = (ma as u64 * y1) &BITMASK!(51);
  //y1が27でそれを23とくっつけてるのもなんか変 結果は51bitなので
  //wire [49:0] l2;
  let l2 = ((y1>>2) * (y1>>2)) & BITMASK!(50);

  //wire [49:0] m21;
  let m21 =((k2>>26)* (l2>>25)) & BITMASK!(50);

  //wire [29:0] n2;
  let n2 = (y1<<1) + y1;
  // println!("n2 = {:b}",n2);
  
  //wire [30:0] p2;
  let p2 = BITMASK!(31)&(0x100000000 + (n2<<1) - (m21>>20));//?

  //wire [26:0] y2;
  let y2 = BITMASK!(27)&if bit_true64(p2, 1) && (bit_true64(p2, 0) || bit_true64(p2, 2)) {((p2>>2)&BITMASK!(27)) + 1} else {((p2>>2)&BITMASK!(27))};
  //??
  //{p2[28:2]} + 28'b1って桁合ってるの？
  // println!("y2 = {:b}",y2);

  //wire [24:0] mye;
  let mye = BITMASK!(25)&if bit_true64(y2, 26) {
    if bit_true64(y2, 2) {(y2>>3)+1} else {y2>>3}
  } else
  {
    if bit_true64(y2, 1) {(y2>>2)+1} else {y2>>2}

  };//??
  
  //wire [22:0] my;
  let my = if bit_true64(mye, 24) {0} else {mye & BITMASK!(23)};
  // println!("my = {:b}",my);

  //wire [7:0] eye;
  let eye = BITMASK!(8)&if bit_true64(y2, 26) {254+256 - ea} else {253+256 - ea};//??

  //wire [7:0] ey;
  let ey = BITMASK!(8)&if bit_true64(mye, 24) {(eye + 1)} else {eye};//??
  // println!("ey = {:b}",ey);

  //wire [31:0] y_mul;
  //wire ovf_mul;
  //fmul u1(x, {s, ey, my}, y_mul, ovf_mul);
  let y_mul = (f*f32::from_bits((s<<31)+(ey<<23)+(my as u32))).to_bits();
  // println!("y_mul = {:b}",y_mul);

  //wire nzm;
  let nzm = m!=0;

  let y =   if e == 255 && nzm {(s<<31)+(255<<23)+(1<<22)+(m&BITMASK!(22))} else
            if s == 0 && e == 255 && !nzm {(255<<23)} else
            if x==0 {0} else
            if s == 1 && (x&BITMASK!(31))==0 {1<<31} else 
            if s == 1 {(s<<31)+(255<<23)+(1<<22)+(0)} else {y_mul};
    
f32::from_bits(y)
/*endmodule

`default_nettype wire
*/
}
